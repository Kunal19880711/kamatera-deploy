{% for d in domains %}
server {
    listen 80;
    listen [::]:80;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name {{ d.domain }} www.{{ d.domain }};

    location ~ /.well-known/acme-challenge {
        allow all;
        root /var/www/html;
    }

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }
}

{% if d.is_cert_exists %}
server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;
    server_name {{ d.domain }} www.{{ d.domain }};

    server_tokens off;
    ssl_certificate /etc/letsencrypt/live/{{ d.domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ d.domain }}/privkey.pem;
    ssl_buffer_size 8k;

    {% if is_dhparam_available %}
    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;
    {% endif %}

    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    {% if d.is_server_active %}
    location / {
        try_files $uri @nodejs;
    }
    location @nodejs {
        proxy_pass {{ d.server }};
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        # enable strict transport security only if you understand the implications
    }
    {% endif %}

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;
}
{% endif %}
{% endfor %}